
services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: forgejo-gallery-postgres
    environment:
      POSTGRES_DB: forgejo_gallery
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --locale=C"
    ports:
      - "5434:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - forgejo-gallery-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d forgejo_gallery"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Next.js Application (Development Mode)
  app:
    image: node:18-alpine
    container_name: forgejo-gallery-app
    working_dir: /app
    command: sh -c "npm install && npm run dev"
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://postgres:postgres123@postgres:5432/forgejo_gallery
      NEXTAUTH_URL: http://localhost:3000
      NEXTAUTH_SECRET: your-secret-key-change-this-in-production
    ports:
      - "3007:3000"
    volumes:
      - .:/app
      - /app/node_modules
    networks:
      - forgejo-gallery-network
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  # pgAdmin (optional - for database management)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: forgejo-gallery-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5051:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - forgejo-gallery-network
    depends_on:
      - postgres
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  forgejo-gallery-network:
    driver: bridge
